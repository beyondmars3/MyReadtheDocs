# redis

 官方文档: http://www.redis.cn/

### 特点

1. 数据结构简单，读写效率高。
2. 单线程，避免了cpu切换，
3. io多路复用

### 常用结构

1. string
2. list
3. hash
4. set
5. zset


### key删除策略
1. key 删除 主动和被动。 主动是访问是否触发检测，被动是每隔100ms随机取一些key，检测过期则删除

### 内存淘汰策略
1. 当内存不够用时，随机删除或者报错
2. 删除最近使用最少的key，有算法的

### 持久化
1. rdb 对数据做快照 。 如save 900 1 表示900s内如果有1条是写入命令，就触发产生一次快照，
2. AOF 记录写的操作。 

###  scan 
1. 基于游标迭代数据库的所有键key，可以按模式匹配

### 主从复制
1. slave slaveof 10.10.0.170 6379
2. master 节点不需要更改

### 哨兵模式 sentinel
1. 当主节点挂掉了，自动切换选举
2. redis-sentinel redis-sentinel.conf

### 雪崩
1. 大量的key在同一时刻过期，
2. 有效期加 缓存

### 穿透
1. 访问mysql不存在的数据，如id=-1或者很大的值
2. 代码层做拦截
3. 高级用法布隆过滤器

### 击穿
1. 有一个非常热点的key，抗住了大量的并发请求，然后在这期间过期
2. 永不过期

### 布隆过滤器
1. 如何判断一个大集合中是否含有某个元素。 空间存储效率和查找时间效率优秀。 
2. 有10亿个电话号码，然后来了10万个。 要求检查是否在10亿中

